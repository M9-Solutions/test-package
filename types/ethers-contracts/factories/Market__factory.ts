/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { Market, MarketInterface } from "../Market";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint8",
        name: "version",
        type: "uint8",
      },
    ],
    name: "Initialized",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "OfferAccepted",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "OfferRescended",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "Offered",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "acceptOffer",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_token",
        type: "address",
      },
    ],
    name: "initialize",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "price",
        type: "uint256",
      },
    ],
    name: "offer",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "token",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b50611879806100206000396000f3fe6080604052600436106100705760003560e01c8063c4d66de81161004e578063c4d66de8146100d3578063c815729d146100fc578063f2fde38b14610125578063fc0c546a1461014e57610070565b8063715018a6146100755780638da5cb5b1461008c578063a1920586146100b7575b600080fd5b34801561008157600080fd5b5061008a610179565b005b34801561009857600080fd5b506100a1610201565b6040516100ae91906112a7565b60405180910390f35b6100d160048036038101906100cc91906110e0565b61022b565b005b3480156100df57600080fd5b506100fa60048036038101906100f5919061103c565b6105c6565b005b34801561010857600080fd5b50610123600480360381019061011e91906110b7565b6106a4565b005b34801561013157600080fd5b5061014c6004803603810190610147919061103c565b61092a565b005b34801561015a57600080fd5b50610163610a22565b60405161017091906112a7565b60405180910390f35b610181610a48565b73ffffffffffffffffffffffffffffffffffffffff1661019f610201565b73ffffffffffffffffffffffffffffffffffffffff16146101f5576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016101ec90611394565b60405180910390fd5b6101ff6000610a50565b565b6000606560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b60026001541415610271576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161026890611434565b60405180910390fd5b60026001819055508034146102bb576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016102b290611414565b60405180910390fd5b6000609960009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905060008173ffffffffffffffffffffffffffffffffffffffff1663107a274a856040518263ffffffff1660e01b815260040161031d9190611454565b604080518083038186803b15801561033457600080fd5b505afa158015610348573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061036c919061108e565b905080600001518310156103b5576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016103ac90611334565b60405180910390fd5b600060986000868152602001908152602001600020604051806040016040529081600082015481526020016001820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681525050905060405180604001604052808581526020013373ffffffffffffffffffffffffffffffffffffffff16815250609860008781526020019081526020016000206000820151816000015560208201518160010160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550905050600081600001511461056b578060000151841161051b576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610512906113d4565b60405180910390fd5b806020015173ffffffffffffffffffffffffffffffffffffffff166108fc82600001519081150290604051600060405180830381858888f19350505050158015610569573d6000803e3d6000fd5b505b81602001518410610581576105808533610b16565b5b7f57702abaf817db03dfc5c2937c364d786adf9b8d9289debc94ad3ba9ab2f27da856040516105b09190611454565b60405180910390a1505050600180819055505050565b60006105d26001610d1e565b905080156105f6576001600060016101000a81548160ff0219169083151502179055505b81609960006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555061063f610e0e565b610647610e67565b80156106a05760008060016101000a81548160ff0219169083151502179055507f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb3847402498600160405161069791906112f9565b60405180910390a15b5050565b600260015414156106ea576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016106e190611434565b60405180910390fd5b6002600181905550600060986000838152602001908152602001600020604051806040016040529081600082015481526020016001820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152505090506000609960009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690506000826000015114156107e3576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016107da90611354565b60405180910390fd5b3373ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16636352211e856040518263ffffffff1660e01b81526004016108339190611454565b60206040518083038186803b15801561084b57600080fd5b505afa15801561085f573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108839190611065565b73ffffffffffffffffffffffffffffffffffffffff16146108d9576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016108d0906113b4565b60405180910390fd5b6108e7838360200151610b16565b7f9bd6b4fd288008520fd788a93304e5688a401aea817ea8140ecf1fb8648f3191836040516109169190611454565b60405180910390a150506001808190555050565b610932610a48565b73ffffffffffffffffffffffffffffffffffffffff16610950610201565b73ffffffffffffffffffffffffffffffffffffffff16146109a6576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161099d90611394565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415610a16576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610a0d90611314565b60405180910390fd5b610a1f81610a50565b50565b609960009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600033905090565b6000606560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905081606560006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b6000609960009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690508073ffffffffffffffffffffffffffffffffffffffff16636352211e846040518263ffffffff1660e01b8152600401610b769190611454565b60206040518083038186803b158015610b8e57600080fd5b505afa158015610ba2573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610bc69190611065565b73ffffffffffffffffffffffffffffffffffffffff166108fc60986000868152602001908152602001600020600001549081150290604051600060405180830381858888f19350505050158015610c21573d6000803e3d6000fd5b508073ffffffffffffffffffffffffffffffffffffffff166323b872dd8273ffffffffffffffffffffffffffffffffffffffff16636352211e866040518263ffffffff1660e01b8152600401610c779190611454565b60206040518083038186803b158015610c8f57600080fd5b505afa158015610ca3573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610cc79190611065565b84866040518463ffffffff1660e01b8152600401610ce7939291906112c2565b600060405180830381600087803b158015610d0157600080fd5b505af1158015610d15573d6000803e3d6000fd5b50505050505050565b60008060019054906101000a900460ff1615610d955760018260ff16148015610d4d5750610d4b30610ec0565b155b610d8c576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610d8390611374565b60405180910390fd5b60009050610e09565b8160ff1660008054906101000a900460ff1660ff1610610dea576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610de190611374565b60405180910390fd5b816000806101000a81548160ff021916908360ff160217905550600190505b919050565b600060019054906101000a900460ff16610e5d576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610e54906113f4565b60405180910390fd5b610e65610ee3565b565b600060019054906101000a900460ff16610eb6576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610ead906113f4565b60405180910390fd5b610ebe610f44565b565b6000808273ffffffffffffffffffffffffffffffffffffffff163b119050919050565b600060019054906101000a900460ff16610f32576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610f29906113f4565b60405180910390fd5b610f42610f3d610a48565b610a50565b565b600060019054906101000a900460ff16610f93576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610f8a906113f4565b60405180910390fd5b60018081905550565b600081359050610fab81611815565b92915050565b600081519050610fc081611815565b92915050565b600060408284031215610fd857600080fd5b610fe2604061146f565b90506000610ff284828501611027565b600083015250602061100684828501611027565b60208301525092915050565b6000813590506110218161182c565b92915050565b6000815190506110368161182c565b92915050565b60006020828403121561104e57600080fd5b600061105c84828501610f9c565b91505092915050565b60006020828403121561107757600080fd5b600061108584828501610fb1565b91505092915050565b6000604082840312156110a057600080fd5b60006110ae84828501610fc6565b91505092915050565b6000602082840312156110c957600080fd5b60006110d784828501611012565b91505092915050565b600080604083850312156110f357600080fd5b600061110185828601611012565b925050602061111285828601611012565b9150509250929050565b611125816114a5565b82525050565b611134816114ee565b82525050565b6000611147602683611494565b915061115282611571565b604082019050919050565b600061116a603183611494565b9150611175826115c0565b604082019050919050565b600061118d601983611494565b91506111988261160f565b602082019050919050565b60006111b0602e83611494565b91506111bb82611638565b604082019050919050565b60006111d3602083611494565b91506111de82611687565b602082019050919050565b60006111f6602183611494565b9150611201826116b0565b604082019050919050565b6000611219602f83611494565b9150611224826116ff565b604082019050919050565b600061123c602b83611494565b91506112478261174e565b604082019050919050565b600061125f602e83611494565b915061126a8261179d565b604082019050919050565b6000611282601f83611494565b915061128d826117ec565b602082019050919050565b6112a1816114d7565b82525050565b60006020820190506112bc600083018461111c565b92915050565b60006060820190506112d7600083018661111c565b6112e4602083018561111c565b6112f16040830184611298565b949350505050565b600060208201905061130e600083018461112b565b92915050565b6000602082019050818103600083015261132d8161113a565b9050919050565b6000602082019050818103600083015261134d8161115d565b9050919050565b6000602082019050818103600083015261136d81611180565b9050919050565b6000602082019050818103600083015261138d816111a3565b9050919050565b600060208201905081810360008301526113ad816111c6565b9050919050565b600060208201905081810360008301526113cd816111e9565b9050919050565b600060208201905081810360008301526113ed8161120c565b9050919050565b6000602082019050818103600083015261140d8161122f565b9050919050565b6000602082019050818103600083015261142d81611252565b9050919050565b6000602082019050818103600083015261144d81611275565b9050919050565b60006020820190506114696000830184611298565b92915050565b600061147961148a565b90506114858282611500565b919050565b6000604051905090565b600082825260208201905092915050565b60006114b0826114b7565b9050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b600060ff82169050919050565b60006114f9826114e1565b9050919050565b61150982611560565b810181811067ffffffffffffffff8211171561152857611527611531565b5b80604052505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6000601f19601f8301169050919050565b7f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160008201527f6464726573730000000000000000000000000000000000000000000000000000602082015250565b7f4d61726b65743a206f6666657220616d6f756e742069732062656c6f7720746860008201527f65206d696e696d756d206c697374696e67000000000000000000000000000000602082015250565b7f4d61726b65743a206e6f6e6578697374656e74206f6666657200000000000000600082015250565b7f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160008201527f647920696e697469616c697a6564000000000000000000000000000000000000602082015250565b7f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572600082015250565b7f4d61726b65743a206f6e6c7920746865206f776e657220697320616c6c6f776560008201527f6400000000000000000000000000000000000000000000000000000000000000602082015250565b7f4d61726b65743a206f6666657220616d6f756e74206d7573742065786365656460008201527f206578697374696e67206f666665720000000000000000000000000000000000602082015250565b7f496e697469616c697a61626c653a20636f6e7472616374206973206e6f74206960008201527f6e697469616c697a696e67000000000000000000000000000000000000000000602082015250565b7f4d61726b65743a206f6666657220616d6f756e7420646f6573206e6f74206d6160008201527f7463682076616c75652073656e74000000000000000000000000000000000000602082015250565b7f5265656e7472616e637947756172643a207265656e7472616e742063616c6c00600082015250565b61181e816114a5565b811461182957600080fd5b50565b611835816114d7565b811461184057600080fd5b5056fea2646970667358221220df7dcdcdce24f0928f36df5dcf7d231821b6bd4d5f2a326343819086851ec73064736f6c63430008040033";

type MarketConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: MarketConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class Market__factory extends ContractFactory {
  constructor(...args: MarketConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<Market> {
    return super.deploy(overrides || {}) as Promise<Market>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): Market {
    return super.attach(address) as Market;
  }
  override connect(signer: Signer): Market__factory {
    return super.connect(signer) as Market__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): MarketInterface {
    return new utils.Interface(_abi) as MarketInterface;
  }
  static connect(address: string, signerOrProvider: Signer | Provider): Market {
    return new Contract(address, _abi, signerOrProvider) as Market;
  }
}

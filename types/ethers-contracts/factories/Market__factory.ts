/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { Market, MarketInterface } from "../Market";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint8",
        name: "version",
        type: "uint8",
      },
    ],
    name: "Initialized",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "OfferAccepted",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "OfferRescended",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "Offered",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "acceptOffer",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "getOffer",
    outputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "price",
            type: "uint256",
          },
          {
            internalType: "address payable",
            name: "offerer",
            type: "address",
          },
        ],
        internalType: "struct IMarket.Offer",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_token",
        type: "address",
      },
    ],
    name: "initialize",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "price",
        type: "uint256",
      },
    ],
    name: "offer",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "token",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b506119f8806100206000396000f3fe60806040526004361061007b5760003560e01c8063c4d66de81161004e578063c4d66de81461011b578063c815729d14610144578063f2fde38b1461016d578063fc0c546a146101965761007b565b80634579268a14610080578063715018a6146100bd5780638da5cb5b146100d4578063a1920586146100ff575b600080fd5b34801561008c57600080fd5b506100a760048036038101906100a291906111bc565b6101c1565b6040516100b491906115a6565b60405180910390f35b3480156100c957600080fd5b506100d261024e565b005b3480156100e057600080fd5b506100e96102d6565b6040516100f691906113f9565b60405180910390f35b610119600480360381019061011491906111e5565b610300565b005b34801561012757600080fd5b50610142600480360381019061013d9190611141565b61069b565b005b34801561015057600080fd5b5061016b600480360381019061016691906111bc565b610779565b005b34801561017957600080fd5b50610194600480360381019061018f9190611141565b6109ff565b005b3480156101a257600080fd5b506101ab610af7565b6040516101b891906113f9565b60405180910390f35b6101c9611071565b60986000838152602001908152602001600020604051806040016040529081600082015481526020016001820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815250509050919050565b610256610b1d565b73ffffffffffffffffffffffffffffffffffffffff166102746102d6565b73ffffffffffffffffffffffffffffffffffffffff16146102ca576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016102c1906114e6565b60405180910390fd5b6102d46000610b25565b565b6000606560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b60026001541415610346576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161033d90611586565b60405180910390fd5b6002600181905550803414610390576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161038790611566565b60405180910390fd5b6000609960009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905060008173ffffffffffffffffffffffffffffffffffffffff1663107a274a856040518263ffffffff1660e01b81526004016103f291906115c1565b604080518083038186803b15801561040957600080fd5b505afa15801561041d573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104419190611193565b9050806000015183101561048a576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161048190611486565b60405180910390fd5b600060986000868152602001908152602001600020604051806040016040529081600082015481526020016001820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681525050905060405180604001604052808581526020013373ffffffffffffffffffffffffffffffffffffffff16815250609860008781526020019081526020016000206000820151816000015560208201518160010160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550905050600081600001511461064057806000015184116105f0576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016105e790611526565b60405180910390fd5b806020015173ffffffffffffffffffffffffffffffffffffffff166108fc82600001519081150290604051600060405180830381858888f1935050505015801561063e573d6000803e3d6000fd5b505b81602001518410610656576106558533610beb565b5b7f57702abaf817db03dfc5c2937c364d786adf9b8d9289debc94ad3ba9ab2f27da8560405161068591906115c1565b60405180910390a1505050600180819055505050565b60006106a76001610df3565b905080156106cb576001600060016101000a81548160ff0219169083151502179055505b81609960006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550610714610ee3565b61071c610f3c565b80156107755760008060016101000a81548160ff0219169083151502179055507f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb3847402498600160405161076c919061144b565b60405180910390a15b5050565b600260015414156107bf576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016107b690611586565b60405180910390fd5b6002600181905550600060986000838152602001908152602001600020604051806040016040529081600082015481526020016001820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152505090506000609960009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690506000826000015114156108b8576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016108af906114a6565b60405180910390fd5b3373ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16636352211e856040518263ffffffff1660e01b815260040161090891906115c1565b60206040518083038186803b15801561092057600080fd5b505afa158015610934573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610958919061116a565b73ffffffffffffffffffffffffffffffffffffffff16146109ae576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016109a590611506565b60405180910390fd5b6109bc838360200151610beb565b7f9bd6b4fd288008520fd788a93304e5688a401aea817ea8140ecf1fb8648f3191836040516109eb91906115c1565b60405180910390a150506001808190555050565b610a07610b1d565b73ffffffffffffffffffffffffffffffffffffffff16610a256102d6565b73ffffffffffffffffffffffffffffffffffffffff1614610a7b576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610a72906114e6565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415610aeb576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610ae290611466565b60405180910390fd5b610af481610b25565b50565b609960009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600033905090565b6000606560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905081606560006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b6000609960009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690508073ffffffffffffffffffffffffffffffffffffffff16636352211e846040518263ffffffff1660e01b8152600401610c4b91906115c1565b60206040518083038186803b158015610c6357600080fd5b505afa158015610c77573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610c9b919061116a565b73ffffffffffffffffffffffffffffffffffffffff166108fc60986000868152602001908152602001600020600001549081150290604051600060405180830381858888f19350505050158015610cf6573d6000803e3d6000fd5b508073ffffffffffffffffffffffffffffffffffffffff166323b872dd8273ffffffffffffffffffffffffffffffffffffffff16636352211e866040518263ffffffff1660e01b8152600401610d4c91906115c1565b60206040518083038186803b158015610d6457600080fd5b505afa158015610d78573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610d9c919061116a565b84866040518463ffffffff1660e01b8152600401610dbc93929190611414565b600060405180830381600087803b158015610dd657600080fd5b505af1158015610dea573d6000803e3d6000fd5b50505050505050565b60008060019054906101000a900460ff1615610e6a5760018260ff16148015610e225750610e2030610f95565b155b610e61576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610e58906114c6565b60405180910390fd5b60009050610ede565b8160ff1660008054906101000a900460ff1660ff1610610ebf576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610eb6906114c6565b60405180910390fd5b816000806101000a81548160ff021916908360ff160217905550600190505b919050565b600060019054906101000a900460ff16610f32576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610f2990611546565b60405180910390fd5b610f3a610fb8565b565b600060019054906101000a900460ff16610f8b576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610f8290611546565b60405180910390fd5b610f93611019565b565b6000808273ffffffffffffffffffffffffffffffffffffffff163b119050919050565b600060019054906101000a900460ff16611007576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610ffe90611546565b60405180910390fd5b611017611012610b1d565b610b25565b565b600060019054906101000a900460ff16611068576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161105f90611546565b60405180910390fd5b60018081905550565b604051806040016040528060008152602001600073ffffffffffffffffffffffffffffffffffffffff1681525090565b6000813590506110b081611994565b92915050565b6000815190506110c581611994565b92915050565b6000604082840312156110dd57600080fd5b6110e760406115dc565b905060006110f78482850161112c565b600083015250602061110b8482850161112c565b60208301525092915050565b600081359050611126816119ab565b92915050565b60008151905061113b816119ab565b92915050565b60006020828403121561115357600080fd5b6000611161848285016110a1565b91505092915050565b60006020828403121561117c57600080fd5b600061118a848285016110b6565b91505092915050565b6000604082840312156111a557600080fd5b60006111b3848285016110cb565b91505092915050565b6000602082840312156111ce57600080fd5b60006111dc84828501611117565b91505092915050565b600080604083850312156111f857600080fd5b600061120685828601611117565b925050602061121785828601611117565b9150509250929050565b61122a81611624565b82525050565b61123981611612565b82525050565b6112488161166d565b82525050565b600061125b602683611601565b9150611266826116f0565b604082019050919050565b600061127e603183611601565b91506112898261173f565b604082019050919050565b60006112a1601983611601565b91506112ac8261178e565b602082019050919050565b60006112c4602e83611601565b91506112cf826117b7565b604082019050919050565b60006112e7602083611601565b91506112f282611806565b602082019050919050565b600061130a602183611601565b91506113158261182f565b604082019050919050565b600061132d602f83611601565b91506113388261187e565b604082019050919050565b6000611350602b83611601565b915061135b826118cd565b604082019050919050565b6000611373602e83611601565b915061137e8261191c565b604082019050919050565b6000611396601f83611601565b91506113a18261196b565b602082019050919050565b6040820160008201516113c260008501826113db565b5060208201516113d56020850182611221565b50505050565b6113e481611656565b82525050565b6113f381611656565b82525050565b600060208201905061140e6000830184611230565b92915050565b60006060820190506114296000830186611230565b6114366020830185611230565b61144360408301846113ea565b949350505050565b6000602082019050611460600083018461123f565b92915050565b6000602082019050818103600083015261147f8161124e565b9050919050565b6000602082019050818103600083015261149f81611271565b9050919050565b600060208201905081810360008301526114bf81611294565b9050919050565b600060208201905081810360008301526114df816112b7565b9050919050565b600060208201905081810360008301526114ff816112da565b9050919050565b6000602082019050818103600083015261151f816112fd565b9050919050565b6000602082019050818103600083015261153f81611320565b9050919050565b6000602082019050818103600083015261155f81611343565b9050919050565b6000602082019050818103600083015261157f81611366565b9050919050565b6000602082019050818103600083015261159f81611389565b9050919050565b60006040820190506115bb60008301846113ac565b92915050565b60006020820190506115d660008301846113ea565b92915050565b60006115e66115f7565b90506115f2828261167f565b919050565b6000604051905090565b600082825260208201905092915050565b600061161d82611636565b9050919050565b600061162f82611636565b9050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b600060ff82169050919050565b600061167882611660565b9050919050565b611688826116df565b810181811067ffffffffffffffff821117156116a7576116a66116b0565b5b80604052505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6000601f19601f8301169050919050565b7f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160008201527f6464726573730000000000000000000000000000000000000000000000000000602082015250565b7f4d61726b65743a206f6666657220616d6f756e742069732062656c6f7720746860008201527f65206d696e696d756d206c697374696e67000000000000000000000000000000602082015250565b7f4d61726b65743a206e6f6e6578697374656e74206f6666657200000000000000600082015250565b7f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160008201527f647920696e697469616c697a6564000000000000000000000000000000000000602082015250565b7f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572600082015250565b7f4d61726b65743a206f6e6c7920746865206f776e657220697320616c6c6f776560008201527f6400000000000000000000000000000000000000000000000000000000000000602082015250565b7f4d61726b65743a206f6666657220616d6f756e74206d7573742065786365656460008201527f206578697374696e67206f666665720000000000000000000000000000000000602082015250565b7f496e697469616c697a61626c653a20636f6e7472616374206973206e6f74206960008201527f6e697469616c697a696e67000000000000000000000000000000000000000000602082015250565b7f4d61726b65743a206f6666657220616d6f756e7420646f6573206e6f74206d6160008201527f7463682076616c75652073656e74000000000000000000000000000000000000602082015250565b7f5265656e7472616e637947756172643a207265656e7472616e742063616c6c00600082015250565b61199d81611612565b81146119a857600080fd5b50565b6119b481611656565b81146119bf57600080fd5b5056fea2646970667358221220a6cafa8c6dc4440513d747d95c623a0099ff6fa4368f5c47eec185c9af3193f064736f6c63430008040033";

type MarketConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: MarketConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class Market__factory extends ContractFactory {
  constructor(...args: MarketConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<Market> {
    return super.deploy(overrides || {}) as Promise<Market>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): Market {
    return super.attach(address) as Market;
  }
  override connect(signer: Signer): Market__factory {
    return super.connect(signer) as Market__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): MarketInterface {
    return new utils.Interface(_abi) as MarketInterface;
  }
  static connect(address: string, signerOrProvider: Signer | Provider): Market {
    return new Contract(address, _abi, signerOrProvider) as Market;
  }
}
